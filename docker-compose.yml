version: '3.1'

services:
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - sockets:/sockets
    network_mode: host
    depends_on:
      - api1
      - api2
    deploy:
      resources:
        limits:
          cpus: "0.19"
          memory: "10MB"

  api1: &api
    image: carloseduard0/rinha-backend-dotnet
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
    network_mode: host
    environment:
      UNIX_SOCKET: /sockets/api1.sock
      ConnectionStrings__PostgreSQL: Host=/sockets;Port=30003;Database=postgres;Username=postgres;Password=postgres;Enlist=false;No Reset On Close=true;
      ConnectionStrings__Redis: localhost:30004,protocol=resp3
    volumes:
      - sockets:/sockets
    deploy:
      resources:
        limits:
          cpus: "0.28"
          memory: "30MB"

  api2:
    <<: *api
    environment:
      UNIX_SOCKET: /sockets/api2.sock
      ConnectionStrings__PostgreSQL: Host=/sockets;Port=30003;Database=postgres;Username=postgres;Password=postgres;Enlist=false;No Reset On Close=true;
      ConnectionStrings__Redis: localhost:30004,protocol=resp3

  postgres:
    image: postgres
    restart: unless-stopped
    network_mode: host
    environment:
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./postgres.conf:/etc/postgresql/postgresql.conf:ro
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - sockets:/var/run/postgresql/
    command: postgres -c config_file=/etc/postgresql/postgresql.conf
    deploy:
      resources:
        limits:
          cpus: "0.7"
          memory: "450MB"

  redis:
    image: redis:alpine
    restart: unless-stopped
    network_mode: host
    command: --port 30004 --save ""
    deploy:
      resources:
        limits:
          cpus: "0.05"
          memory: "30MB"

volumes:
  sockets:
